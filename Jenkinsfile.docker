/*
 * Requires Jenkins node with Docker CLI access (e.g., Jenkins in Docker with
 * /var/run/docker.sock and /usr/bin/docker mounted).
 */
pipeline {
  agent any
  options { timestamps(); ansiColor('xterm') }
  stages {
    stage('Checkout') {
      steps { checkout scm }
    }
    stage('Unit tests in Python container') {
      agent { docker { image 'python:3.11-slim'; args '-u root:root' } }
      steps {
        sh 'python -m pip install --upgrade pip'
        sh 'pip install -r requirements.txt'
        sh 'pytest -q --maxfail=1 --junitxml=pytest.xml'
      }
      post {
        always { junit 'pytest.xml' }
      }
    }
    stage('Build Docker image') {
      steps {
        sh '''
          APP=jenkins-flask-starter
          TAG=${BUILD_NUMBER}
          docker build -t ${APP}:${TAG} -t ${APP}:latest .
          docker images | head -n 10
        '''
      }
    }
    stage('Smoke test container') {
      steps {
        sh '''
          APP=jenkins-flask-starter
          CID=$(docker run -d -p 5000:5000 ${APP}:latest)
          # simple health check
          for i in $(seq 1 20); do
            curl -fsS http://localhost:5000/ping && ok=1 && break || sleep 1
          done
          docker logs $CID || true
          docker rm -f $CID || true
          test "$ok" = "1"
        '''
      }
    }
    stage('Archive') {
      steps {
        archiveArtifacts artifacts: 'app/**/*.py,requirements.txt,pytest.xml', fingerprint: true
      }
    }
  }
}
